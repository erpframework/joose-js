#summary This page describes how Joose behaves in conjunction with other frameworks

= Introduction =

The Joose object system makes writing object-oriented code in JavaScript more productive. It is not a general purpose JavaScript framework. 
Joose
 * has no methods to traverse or manipulate the DOM
 * does not enforce a particular component framework
 * could run in any JavaScript environment (not just the browser, but also on the server side or within Flash (as ActionScript))

= Joose has been tested with these well known JS frameworks =

|| Name   || Status ||
|| jQuery || Works  ||
|| YUI    || Works  ||
|| Dojo   || Works  ||
|| Prototype || Works [JooseWithPrototypeAndMootools (but follow these instructions)] ||
|| Mootools  || Works [JooseWithPrototypeAndMootools (but follow these instructions)] ||

Support for Prototype and Mootools could be added. If you need this, [http://groups.google.com/group/joose-js please write us]

= Using Joose with another JavaScript framework =

Joose should work very well with other JavaScript frameworks. It does however reserve some global function that should not be used by the other framework. These are:
 * Joose :)
 * Class
 * Module
 * Role
 * Prototype
 * joosify

= Known Issues =

Joose currently stuff its global symbols into the top level namespace (window in the Browser). This currently breaks prototype if it is loaded before Joose. This will be fixed in the next release.